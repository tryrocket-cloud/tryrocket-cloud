apiVersion: batch/v1
kind: CronJob
metadata:
  name: nightly-scale-down-vaultwarden
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: disable-argocd-auto-sync
              image: argoproj/argocd:latest
              envFrom:
                ecretRef:
                  name: argocd-secret
              command:
              - /bin/sh
              - -c
              - |
                echo "Disable ArgoCD sync..."
                #argocd app set vaultwarden --sync-policy none --server argocd.tryrocket.cloud --insecure --auth-token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhcmdvY2QiLCJzdWIiOiJhZG1pbjphcGlLZXkiLCJleHAiOjE3MjQzMzU2NzYsIm5iZiI6MTcyMzQ3MTY3NiwiaWF0IjoxNzIzNDcxNjc2LCJqdGkiOiJ0ZXN0In0.aNNlFEcvL84fPUv-wvkw6DCet1BmlYTormJqKVlCfTM
                argocd app set vaultwarden --sync-policy none --server argocd.tryrocket.cloud --insecure
                echo "ArgoCD sync disabled!"

          containers:
          - name: deployment-trigger
            image: bitnami/kubectl:latest  # You can use any image with kubectl installed
            command:
            - /bin/sh
            - -c
            - |
              # sleep infinity
              kubectl scale deployment vaultwarden --replicas=0 -n vaultwarden

              while [ "$(kubectl get pods -l app=vaultwarden -n vaultwarden --field-selector=status.phase=Running | wc -l)" != "0" ]; do
                echo "Waiting for Vaultwarden pods to terminate..."
                sleep 5
              done

          restartPolicy: OnFailure
