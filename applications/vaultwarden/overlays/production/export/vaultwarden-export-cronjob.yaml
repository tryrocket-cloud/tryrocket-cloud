apiVersion: batch/v1
kind: CronJob
metadata:
  name: vaultwarden-export
spec:
  suspend: true
  schedule: "30 0 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          restartPolicy: Never

          initContainers:
            - name: get-vaultwarden-version
              image: ghcr.io/tryrocket-cloud/tryrocket-cloud:backup
              env:
                - name: VAULTWARDEN_SERVER
                  value: https://vaultwarden.tryrocket.cloud
              command:
                - /bin/sh
                - -c
                - |
                  HTTP_STATUS=$(curl --silent --write-out "%{http_code}" --output /tmp/vaultwarden_config.json ${VAULTWARDEN_SERVER}/api/config)

                  if [ "$HTTP_STATUS" -ne 200 ]; then
                    echo "Error: Failed to fetch Vaultwarden config, HTTP status: $HTTP_STATUS"
                    exit 1
                  fi

                  jq --raw-output '.server.version' /tmp/vaultwarden_config.json > /export/vaultwarden.env

                  if [ $? -ne 0 ]; then
                    echo "Error: Failed to extract .server.version using jq"
                    exit 1
                  fi

                  if [ ! -f /export/vaultwarden.env ]; then
                    echo "Error: /export/vaultwarden.env file does not exist"
                    exit 1
                  fi

                  if [ ! -s /export/vaultwarden.env ]; then
                    echo "Error: /export/vaultwarden.env is empty"
                    exit 1
                  fi

                  cat /export/vaultwarden.env
              volumeMounts:
              - name: vaultwarden-export-volume
                mountPath: /export

            - name: export-vaultwarden-vault
              image: ghcr.io/tryrocket-cloud/tryrocket-cloud:backup
              imagePullPolicy: Always
              env:
                - name: NODE_NO_WARNINGS
                  value: "1"
                - name: VAULTWARDEN_SERVER
                  value: https://vaultwarden.tryrocket.cloud
                - name: VAULTWARDEN_EXPORT_JSON
                  value: /export/vaulwarden-export.json
              envFrom:
                - secretRef:
                    name: vaultwarden-credentials-secret
              command:
                - /bin/sh
                - -c
                - |
                  bw config server $VAULTWARDEN_SERVER
                  export BW_SESSION=$(bw login "$VAULTWARDEN_USER" "$MASTER_PASSWORD" --raw)

                  bw sync

                  bw export --format json --output "$VAULTWARDEN_EXPORT_JSON"

                  bw logout

                  [ ! -f "$VAULTWARDEN_EXPORT_JSON" ] && exit 1
                  [ ! -s "$VAULTWARDEN_EXPORT_JSON" ] && exit 1
                  
                  jq empty "$VAULTWARDEN_EXPORT_JSON" > /dev/null 2>&1

                  if [ $? -ne 0 ]; then
                    jq empty "$VAULTWARDEN_EXPORT_JSON"
                    exit 1
                  fi
              volumeMounts:
              - name: vaultwarden-export-volume
                mountPath: /export

          containers:
            - name: ionos-com-objectstorage-eu-central-3-s3-kopia-backup
              image: ghcr.io/tryrocket-cloud/tryrocket-cloud:backup
              imagePullPolicy: Always
              env:
                - name: VAULTWARDEN_EXPORT_JSON
                  value: /export/vaulwarden-export.json
              envFrom:
                - secretRef:
                    name: ionos-com-objectstorage-s3-secret
                - secretRef:
                    name: ionos-com-objectstorage-eu-central-3-kopia-secret
                - secretRef:
                    name: ionos-com-objectstorage-eu-central-3-healthchecks-secret
              command:
                - /bin/sh
                - -c
                - |
                  VAULTWARDEN_VERSION=$(cat /shared/vaultwarden.env)
                  KOPIA_VERSION=$(kopia --version | awk '{print $1}')
                  HOSTNAME="tryrocket.cloud"
                  
                  [ ! -f "$VAULTWARDEN_EXPORT_JSON" ] && exit 1  # Ensure the file exists
                  [ ! -s "$VAULTWARDEN_EXPORT_JSON" ] && exit 1  # Ensure the file is not empty
                  [ -z "$HC_UUID" ] && exit 1  # Ensure health check UUID is set
                  [ -z "$VAULTWARDEN_VERSION" ] && exit 1  # Ensure Vaultwarden version is set
                  [ -z "$KOPIA_VERSION" ] && exit 1  # Ensure Kopia version is set

                  HC_URL="https://hc-ping.com/$HC_UUID"

                  echo "VAULTWARDEN_VERSION=$VAULTWARDEN_VERSION"
                  echo "KOPIA_VERSION=$KOPIA_VERSION"

                  sleep infinity
                  
                  # Start health check
                  curl -fsS -m 10 --retry 5 $HC_URL/start

                  # Perform Kopia backup
                  kopia snapshot create /export --hostname="$HOSTNAME" --description="kopia:$KOPIA_VERSION vaultwarden:$VAULTWARDEN_VERSION"
                  curl -fsS -m 10 --retry 5 $HC_URL/$?

                  # Perform Kopia consistency check
                  kopia repository verify --verify-files-percent 33
                  curl -fsS -m 10 --retry 5 $HC_URL/$?

                  # Prune old snapshots
                  kopia snapshot prune --keep-last 30 --keep-monthly 3 --keep-annual 1
                  curl -fsS -m 10 --retry 5 $HC_URL/$?
                  
              volumeMounts:
                - name: backup-sh-volume
                  mountPath: /backup.sh
                  subPath: backup.sh
                - name: vaultwarden-backup-shared-volume
                  mountPath: /shared
                  readOnly: true

            - name: ionos-com-objectstorage-eu-central-3-s3-restic-backup
              image: ghcr.io/tryrocket-cloud/tryrocket-cloud:backup
              imagePullPolicy: Always
              env:
                - name: VAULTWARDEN_EXPORT_JSON
                  value: /export/vaulwarden-export.json
              envFrom:
                - secretRef:
                    name: ionos-com-objectstorage-s3-secret
                - secretRef:
                    name: ionos-com-objectstorage-eu-central-3-restic-secret
                - secretRef:
                    name: ionos-com-objectstorage-eu-central-3-healthchecks-secret
              command:
                  - /bin/sh
                  - -c
                  - |
                    VAULTWARDEN_VERSION=$(cat /shared/vaultwarden.env)
                    RESTIC_VERSION=$(restic version | awk '{print $2}')
                    HOSTNAME="tryrocket.cloud"
                    
                    [ ! -z "$HC_UUID" ] && exit 1
                    [ ! -z "$VAULTWARDEN_VERSION" ] && exit 1
                    [ ! -z "$RESTIC_VERSION" ] && exit 1

                    HC_URL="https://hc-ping.com/$HC_UUID"

                    echo VAULTWARDEN_VERSION=$VAULTWARDEN_VERSION
                    echo RESTIC_VERSION=$RESTIC_VERSION

                    # Start health check
                    curl -fsS -m 10 --retry 5 $HC_URL/start

                    # Perform restic backup
                    restic backup --host "$HOSTNAME" --tag restic:"$RESTIC_VERSION" --tag vaultwarden:"$VAULTWARDEN_VERSION" --tag export $VAULTWARDEN_EXPORT_JSON
                    curl -fsS -m 10 --retry 5 $HC_URL/$?

                    # Perform restic check
                    restic check --read-data-subset 1/7
                    curl -fsS -m 10 --retry 5 $HC_URL/$?

                    # Prune old backups
                    restic forget --keep-daily 30 --keep-monthly 3 --keep-yearly 1 --prune
                    curl -fsS -m 10 --retry 5 $HC_URL/$?

              volumeMounts:
                - name: backup-sh-volume
                  mountPath: /backup.sh
                  subPath: backup.sh
                - name: vaultwarden-backup-shared-volume
                  mountPath: /shared
                  readOnly: true
                  
          volumes:
            - name: backup-sh-volume
              configMap:
                name: backup-sh-configmap
                items:
                - key: backup.sh
                  path: backup.sh

            - name: vaultwarden-backup-shared-volume
              emptyDir: {}