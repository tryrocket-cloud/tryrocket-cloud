apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:

# Why is this here -> document or remove
#      securityContext:
#        fsGroup: 5050
      
#      initContainers:
      
#        - name: init-postgres
#          image: busybox
#          command:
#              - /bin/sh
#              - -c
#              - |
#                mkdir -p /var/lib/postgresql/data/pgdata
#                chown -R 70:70 /var/lib/postgresql/data
#                ls -la /var/lib/postgresql/data
#          volumeMounts:
#            - name: postgres-volume
#              mountPath: /var/lib/postgresql/data

# Why is this here -> document or remove
#          securityContext: # maybe not needed
#            runAsUser: 0

      containers:
        - name: postgres
          image: postgres:16.3-alpine
          ports:
            - containerPort: 5432

          env:
            - name: TZ
              value: Europe/Berlin
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: PGTZ
              value: Europe/Berlin
            - name: PGHOST
              value: localhost
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PORT
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          envFrom:
            - secretRef:
                name: postgres-secret
            - configMapRef:
                name: postgres-config
#          livenessProbe:
#            exec:
#              command:
#                - sh
#                - -c
#                - exec pg_isready
#            initialDelaySeconds: 15
#            periodSeconds: 60
          readinessProbe:
            exec:
              command: ["pg_isready"]
            initialDelaySeconds: 0
            periodSeconds: 60
            failureThreshold: 1
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data 