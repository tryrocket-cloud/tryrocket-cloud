apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        fsGroup: 5050
      
      initContainers:
      
        - name: init-postgres
          image: busybox
          command:
              - /bin/sh
              - -c
              - |
                mkdir -p /var/lib/postgresql/data/pgdata
                chown -R 70:70 /var/lib/postgresql/data
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data
          securityContext: # maybe not needed
            runAsUser: 0

      containers:
        - name: postgres
          image: postgres:16.3-alpine
          ports:
            - containerPort: 5432
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U tryrocket.cloud -d tryrocket.cloud
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U tryrocket.cloud -d tryrocket.cloud
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data 