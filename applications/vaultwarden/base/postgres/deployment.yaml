apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:

# Why is this here -> document or remove
#      securityContext:
#        fsGroup: 5050
      
      initContainers:
      
        - name: init-postgres
          image: busybox
          command:
              - /bin/sh
              - -c
              - |
                mkdir -p /var/lib/postgresql/data/pgdata
                chown -R 70:70 /var/lib/postgresql/data
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data

# Why is this here -> document or remove
#          securityContext: # maybe not needed
#            runAsUser: 0

      containers:
        - name: postgres
          image: postgres:16.3-alpine
          ports:
            - containerPort: 5432

          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          envFrom:
            - secretRef:
                name: postgres-secret

          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready

export PGHOST=mydb.example.com
export PGPORT=5432
export PGUSER=myuser
export PGPASSWORD=mypassword
export PGDATABASE=mydatabase

pg_isready


            initialDelaySeconds: 60
            periodSeconds: 60
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready
            initialDelaySeconds: 10
            periodSeconds: 60
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data 