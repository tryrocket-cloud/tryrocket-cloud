apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: vaultwarden
          image: vaultwarden/server:latest
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_URL
              value: "postgresql://vaultwarden:vaultwarden@postgres.postgres-16/vaultwarden"
            - name: DOMAIN
              value: "https://vaultwarden.tryrocket.cloud"
            - name: ROCKET_PORT
              value: "8080"
            - name: ADMIN_TOKEN
              value: "$argon2id$v=19$m=65540,t=3,p=4$NGpHTUx5UHQyeldZdmFtb1d3T3JmVmlCY3BzTW9BRUNlUFQvZnBKTUZ5UT0$3oUREYYD6MVnctdDoOguDcnlpEcbD1epFKirtgc8huE"
            - name: SIGNUPS_ALLOWED
              value: "true"
            - name: INVITATIONS_ALLOWED
              value: "false"
            - name: SIGNUPS_VERIFY
              value: "false"
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          volumeMounts:
            - name: vaultwarden-storage
              mountPath: /data
      volumes:
        - name: vaultwarden-storage
          persistentVolumeClaim:
            claimName: vaultwarden-pvc
