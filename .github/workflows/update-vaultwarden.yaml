name: Update Vaultwarden

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  check-for-new-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Install yq
        run: |
          VERSION=v4.44.3
          wget https://github.com/mikefarah/yq/releases/download/$VERSION/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Get Latest Vaultwarden Release
        id: get_latest_release
        run: |
          latest_version=$(curl --silent "https://api.github.com/repos/dani-garcia/vaultwarden/releases/latest" | jq -r .tag_name)
          echo "latest_version=${latest_version}" >> $GITHUB_ENV
          echo "Latest Vaultwarden release is ${latest_version}"

      - name: Get current Vaultwarden version
        id: get_current_tag
        run: |
          current_tag=$(yq '.images[0].newTag' applications/vaultwarden/overlays/production/kustomization.yaml)
          echo "current_tag=${current_tag}" >> $GITHUB_ENV
          echo "Current Vaultwarden tag is ${current_tag}"

      - name: Check if Update is Needed
        id: check_update
        run: |
          if [ "${{ env.latest_version }}" = "${{ env.current_tag }}" ]; then
            echo "No update needed"
            echo "update_needed=false" >> $GITHUB_ENV
          else
            echo "Update needed"
            echo "update_needed=true" >> $GITHUB_ENV
          fi

      - name: Check if branch exists
        id: check_branch
        run: |
          BRANCH_NAME="update-vaultwarden-${{ env.latest_version }}"
          if git ls-remote --exit-code --heads origin $BRANCH_NAME; then
            exit 0
          fi

      - name: Update kustomization.yaml
        if: env.update_needed == 'true'
        run: |
          sed -i 's/newTag: ${{ env.current_tag }}/newTag: ${{ env.latest_version }}/' applications/vaultwarden/overlays/production/kustomization.yaml
        
        # not using yq https://github.com/mikefarah/yq/issues/515
        # yq eval '.images[0].newTag = "${{ env.latest_version }}"' -i applications/vaultwarden/overlays/production/kustomization.yaml

      - name: Create Pull Request
        if: env.update_needed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update vaultwarden from ${{ env.current_tag }} to ${{ env.latest_version }} [skip ci]"
          branch: update-vaultwarden-${{ env.latest_version }}
          title: "Update vaultwarden to ${{ env.latest_version }}"
          body: "This PR updates the Vaultwarden version from ${{ env.current_tag }} to the latest release: ${{ env.latest_version }}."
          labels: |
            vaultwarden
            update
